// <auto-generated />
using System;
using System.Collections.Generic;
using Dice.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DDA_Server.Migrations
{
    [DbContext(typeof(DiceContext))]
    [Migration("20240109221701_addDiceInterpreations")]
    partial class addDiceInterpreations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "hstore");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ChatGPT.ChatGPTResponse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Dictionary<string, string>>("DiceInterpretations")
                        .IsRequired()
                        .HasColumnType("hstore");

                    b.Property<string>("OverviewInterpretation")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ChatGPTResponse");
                });

            modelBuilder.Entity("Dice.Entities.DiceSpread", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("D10_100")
                        .HasColumnType("integer");

                    b.Property<int>("D12")
                        .HasColumnType("integer");

                    b.Property<int>("D2")
                        .HasColumnType("integer");

                    b.Property<int>("D20")
                        .HasColumnType("integer");

                    b.Property<int>("D4")
                        .HasColumnType("integer");

                    b.Property<int>("D6")
                        .HasColumnType("integer");

                    b.Property<int>("D8")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("interpretationId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("interpretationId");

                    b.ToTable("DiceSpread");
                });

            modelBuilder.Entity("Dice.Entities.DiceSpread", b =>
                {
                    b.HasOne("ChatGPT.ChatGPTResponse", "interpretation")
                        .WithMany()
                        .HasForeignKey("interpretationId");

                    b.Navigation("interpretation");
                });
#pragma warning restore 612, 618
        }
    }
}
